@model IPagedList<Employee>
@using X.PagedList
@using X.PagedList.Mvc.Core


<div class="container p-3">
    <div>
        <h2>Employee List</h2>
    </div>
    <div class="row align-items-center">
        <form asp-action="Index" method="get" class="d-flex justify-content-between w-100">
            <div class="col-md-3">
                <div class="input-group">
                    <input type="text" class="form-control" name="searchText"
                           placeholder="Search employee ..." value="@ViewBag.SearchText" />
                    <button type="submit" class="btn btn-outline-secondary">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>
            @* Filter *@
            <div class="col-md-6 mx-3">
                <div class="input-group">
                    <select name="provinceId" class="form-select" asp-items="@ViewBag.Provinces">
                        <option value="">Select Province</option>
                    </select>
                    <select name="districtId" class="form-select" asp-items="@ViewBag.Districts">
                        <option value="">Select District</option>
                    </select>
                    <select name="communeId" class="form-select" asp-items="@ViewBag.Communes">
                        <option value="">Select Commune</option>
                    </select>
                    <button type="submit" class="btn btn-outline-secondary">Filter</button>
                </div>
            </div>
            <div class="col-md-3">
                <a asp-controller="Employee" asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-square"></i> Create new employee
                </a>
            </div>
        </form>
        <form asp-action="ImportEmployeesFromExcel" method="post" enctype="multipart/form-data" style="display:inline;">
            <div class="form-group">
                <input type="file" name="file" accept=".xlsx" required />
                <button type="submit" class="btn btn-success">Import Employees</button>
            </div>
        </form>
    </div>
</div>

<div>
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th></th>
                <th>ID</th>
                <th>Full Name</th>
                <th>Date of Birth</th>
                <th>Age</th>
                <th>Ethnicity</th>
                <th>Job</th>
                <th>Citizen ID</th>
                <th>Phone Number</th>
                <th>Diploma</th>
                <th>Details</th>
                <th class="w-20">Edit</th>
                <th class="w-20">Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td><input type="checkbox" class="employee-checkbox" value="@item.Id" /></td>
                    <td>@item.Id</td>
                    <td>@item.FullName</td>
                    <td>@item.DOB.ToString("dd-MM-yyyy")</td>
                    <td>@item.Age</td>
                    <td>@item.Ethnicity</td>
                    <td>@item.Job</td>
                    <td>@item.CitizenId</td>
                    <td>@item.PhoneNumber</td>
                    <td>@item.TotalDiplomas</td>
                    <td>
                        <a asp-controller="Employee" asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">
                            <i class="bi bi-info-circle"></i>
                        </a>
                    </td>
                    <td>
                        <a asp-controller="Employee" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">
                            <i class="bi bi-pencil"></i>
                        </a>
                    </td>
                    <td>
                        <a onclick="deleteEmployee('@item.Id')" class="btn btn-danger">
                            <i class="bi bi-trash3"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="mt-3 text-end">
        <button type="button" onclick="exportSelectedEmployees()" class="btn btn-success">
            Export Selected
        </button>
    </div>
</div>


<div class="d-flex justify-content-center mt-3">
    @Html.PagedListPager(
            Model,
            page => Url.Action("Index", new { pageNumber = page, searchText = ViewBag.SearchText }),
            new PagedListRenderOptions
    {
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        ActiveLiElementClass = "active", //dùng để nhận biết trang hiện tại
        DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded, //được áp dụng cho các mục không khả dụng (trang đầu, trang cuối)
        DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded, //hiện thị 2 nút Trang trước và Trang sau khi cần thiết
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always, //đảm bảo nút trang trước luôn xuất hiện
        DisplayLinkToNextPage = PagedListDisplayMode.Always, //đảm bảo nút trang sau luôn xuất hiện
        DisplayLinkToIndividualPages = true, //Giá trị true cho phép hiển thị từng trang cụ thể
                                             //chọn bất kỳ trang nào để chuyển trực tiếp đến trang đó.
        DisplayEllipsesWhenNotShowingAllPageNumbers = true, //Giá trị true sẽ hiển thị dấu ba chấm (...)
                                                            //khi không phải tất cả các trang đều được hiển thị.
        LinkToPreviousPageFormat = "Previous",
        LinkToNextPageFormat = "Next"
    })
</div>

@section scripts {
    <script src="~/js/employeecontroller.js"></script>
}